class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if(root == null){                                       // we are given an empty tree
            return list;
        }
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        boolean flag = true;
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> sublist = new ArrayList<Integer>();
            for(int i = 0; i < size; i++){
                TreeNode node = queue.remove();
                if(node.left != null){
                    queue.add(node.left);
                }
                if(node.right != null){
                    queue.add(node.right);
                }
                
                
                if(flag){                       // odd numberth row iteration
                    sublist.add(node.val);   
                }
                else{                           // even number rowth iteration
                    sublist.add(0, node.val);
                }
                
            }
            list.add(sublist);
            flag = !flag;
        }
        
        return list;
    }
}