class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> list = new LinkedList<List<Integer>>();
        if(root == null){               // If we have got nothing in the tree i.e. the tree is empty we have to return an empty list.
            return list;
        }
        Queue<TreeNode> queue = new LinkedList();
        // root can be null if we have reached this step.
        queue.add(root);
        while(!queue.isEmpty()){
            List<Integer> sublist = new ArrayList();
            int size = queue.size();
            for(int i = 0; i < size; i++){
                TreeNode node = queue.remove();
                if(node.left != null){
                    queue.add(node.left);
                }
                if(node.right != null){
                    queue.add(node.right);
                }
                sublist.add(node.val);
            }
            list.add(0, sublist);           // I dont know why using the addFirst() method gave cannot find symbol compile time error.
        }
        return list;
    }
}