class Solution {
    public void reorderList(ListNode head) {
        int length = length(head);
        if(length == 0 || length == 1){
            return;
        }
        ListNode temp = head;
        for(int i = 1; i < length / 2; i++){
            temp = temp.next;
        }
    
        if(length % 2 != 0){                    // if the length is odd
            temp = temp.next;
        }

        ListNode reversedHead = reverseList(temp.next);
        temp.next = null;
        
        temp = head;
        while(reversedHead != null){
            ListNode nextTemp = temp.next;
            ListNode nextReversedHead = reversedHead.next;
            
            temp.next = reversedHead;
            reversedHead.next = nextTemp;
            
            temp = nextTemp;
            reversedHead = nextReversedHead;
        }
    }
    
    private ListNode reverseList(ListNode head){
        ListNode temp = head;
        ListNode prev = null;
        
        while(temp != null){
            ListNode nextTemp = temp.next;
            temp.next = prev;
            prev = temp;
            temp = nextTemp;
        }
        
        head = prev;
        
        return head;
    }
    
    private int length(ListNode head){
        int length = 0;
        for(ListNode temp = head; temp != null; temp = temp.next){
            length++;
        }
        return length;
    }
}