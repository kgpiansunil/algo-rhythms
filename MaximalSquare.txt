public class Solution {

    public int maximalSquare(char[][] matrix){
        if(matrix == null){
            return 0;
        }
        int rows = matrix.length;
        if(rows <= 0){
            return 0;
        }
        int columns = matrix[0].length;

        int[][] dp = new int[rows][columns];

        int maxSide = 0;

        for(int j = 0; j < columns; j++){
            if(matrix[0][j] == '1'){
                dp[0][j] = 1;
                maxSide = 1;
            }
        }

        for(int i = 0; i < rows; i++){
            if(matrix[i][0] == '1'){
                dp[i][0] = 1;
                maxSide = 1;
            }
        }

        for(int i = 1; i < rows; i++){
            for(int j = 1; j < columns; j++) {
                if (matrix[i][j] == '1') {
                    dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i - 1][j - 1]), dp[i][j - 1]) + 1;
                    if (dp[i][j] > maxSide) {
                        maxSide = dp[i][j];
                    }
                }
            }
        }

        return maxSide * maxSide;

    }

}
